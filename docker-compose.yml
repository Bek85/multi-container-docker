services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: postgres
      PGHOST: localhost
      PGPORT: 5432
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
  server:
    image: server:latest
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: server
    ports:
      - "5000:5000"
    volumes:
      - /app/node_modules
      - ./server:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: postgres
      PGHOST: postgres
      PGPORT: 5432

  client:
    image: client:latest
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: client
    ports:
      - "5173:5173"
    volumes:
      - /app/node_modules
      - ./client:/app
  worker:
    image: worker:latest
    build:
      context: ./worker
      dockerfile: Dockerfile.dev
    container_name: worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    depends_on:
      redis:
        condition: service_healthy
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
